"""Add many-to-many relation between student and lesson

Revision ID: 7390dc644343
Revises: 421102aaf383
Create Date: 2025-02-18 12:18:46.319042

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7390dc644343'
down_revision: Union[str, None] = '421102aaf383'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('student',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('surname', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('student_id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_email'), 'student', ['email'], unique=True)
    op.create_index(op.f('ix_student_name'), 'student', ['name'], unique=False)
    op.create_index(op.f('ix_student_student_id'), 'student', ['student_id'], unique=True)
    op.create_index(op.f('ix_student_surname'), 'student', ['surname'], unique=False)
    op.create_table('teacher',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('surname', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_teacher_email'), 'teacher', ['email'], unique=True)
    op.create_index(op.f('ix_teacher_name'), 'teacher', ['name'], unique=False)
    op.create_index(op.f('ix_teacher_surname'), 'teacher', ['surname'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('lesson',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lesson_code'), 'lesson', ['code'], unique=False)
    op.create_index(op.f('ix_lesson_name'), 'lesson', ['name'], unique=False)
    op.create_table('student_lesson',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lesson.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'lesson_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_lesson')
    op.drop_index(op.f('ix_lesson_name'), table_name='lesson')
    op.drop_index(op.f('ix_lesson_code'), table_name='lesson')
    op.drop_table('lesson')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_teacher_surname'), table_name='teacher')
    op.drop_index(op.f('ix_teacher_name'), table_name='teacher')
    op.drop_index(op.f('ix_teacher_email'), table_name='teacher')
    op.drop_table('teacher')
    op.drop_index(op.f('ix_student_surname'), table_name='student')
    op.drop_index(op.f('ix_student_student_id'), table_name='student')
    op.drop_index(op.f('ix_student_name'), table_name='student')
    op.drop_index(op.f('ix_student_email'), table_name='student')
    op.drop_table('student')
    # ### end Alembic commands ###
